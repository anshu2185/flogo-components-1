#include <SPI.h>
#include <PubSubClient.h>

const char *mqtt_server = "{{setting . "mqtt:server"}}";
const char *mqtt_user = "{{setting . "mqtt:user"}}";
const char *mqtt_pass = "{{setting . "mqtt:pass"}}";
const char *mqtt_port = "{{setting . "mqtt:port"}}";

char out_msg_buff[100];
char out_topic_buff[100];
int mqtt_portnum=atoi(mqtt_port);

//////////////////////

void setup_mqtt() {
    client.setServer(mqtt_server, mqtt_portnum);
    client.setCallback(callback);
}

void mqtt_reconnect() {
    // Loop until we're reconnected
    while (!client.connected()) {
        Serial.print("Attempting MQTT connection...");
        // Create a random client ID
        String clientId = "device-{{setting . "device:name"}}-";
        clientId += String(random(0xffff), HEX);
        // Attempt to connect
        if (client.connect(clientId.c_str(), mqtt_user, mqtt_pass)) {
            Serial.println("connected");
            //client.publish(mqtt_pubTopic, mqtt_readyMsg);
            //client.subscribe(mqtt_subTopic);

            init_mqtt_triggers();

        } else {
            Serial.print("failed, rc=");
            Serial.print(client.state());
            Serial.println(" try again in 5 seconds");
            // Wait 5 seconds before retrying
            delay(5000);
        }
    }
}

void publishMQTT(String topic, String payload) {
	payload.toCharArray(out_msg_buff, payload.length() + 1);
    topic.toCharArray(out_topic_buff, topic.length() + 1);
	client.publish(out_topic_buff, out_msg_buff);
}
